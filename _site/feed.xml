<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2016-11-08T18:05:06+08:00</updated><id>http://localhost:4000//</id><title type="html">Hugh’s Blog</title><subtitle>keep coding.
</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2016/11/08/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2016-11-08T17:47:56+08:00</published><updated>2016-11-08T17:47:56+08:00</updated><id>http://localhost:4000/jekyll/update/2016/11/08/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/11/08/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Go 02</title><link href="http://localhost:4000/go/study/2015/11/04/Go_02.html" rel="alternate" type="text/html" title="Go 02" /><published>2015-11-04T23:06:00+08:00</published><updated>2015-11-04T23:06:00+08:00</updated><id>http://localhost:4000/go/study/2015/11/04/Go_02</id><content type="html" xml:base="http://localhost:4000/go/study/2015/11/04/Go_02.html">&lt;h2 id=&quot;section&quot;&gt;切片&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;mySlice1 := make([]int, 5)&lt;/li&gt;
  &lt;li&gt;mySlice2 := make([]int, 5, 10)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;mySlice3 := []int{1, 2, 3, 4}&lt;/p&gt;

    &lt;p&gt;在之前使用的时候，通常喜欢使用高级类，例如List，ArrayList之类的，不喜欢直接使用数组。首先是数组的初始大小问题，然后是数组的方法不够多。&lt;br /&gt;
定义一个切片的时候，同样也需要大概明确出自己所需要的数据容量。不过由于存在cap(mySlice)的存在，有一个继续新增的逻辑。&lt;br /&gt;
在使用切片时，突然有一个观念的转变。在做Feeling的时候发现，任何一个服务端和客户端交互的数组，都是有一个预估大小的。&lt;br /&gt;
比如服务端和客户端交互数据，一页一般是20条数据。大数据量的时候，由于客户端解析的问题，也逐渐不会将大量数据直接交给客户端。因此，感觉之前使用List的时候，完全不考虑数据大小的做法是很有问题的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><summary type="html">切片</summary></entry><entry><title type="html">升级 EI Capitan 碰到的一些问题</title><link href="http://localhost:4000/mac/ei_capitan/2015/10/05/Update-EI-Capitan.html" rel="alternate" type="text/html" title="升级 EI Capitan 碰到的一些问题" /><published>2015-10-05T06:17:57+08:00</published><updated>2015-10-05T06:17:57+08:00</updated><id>http://localhost:4000/mac/ei_capitan/2015/10/05/Update%20EI%20Capitan</id><content type="html" xml:base="http://localhost:4000/mac/ei_capitan/2015/10/05/Update-EI-Capitan.html">&lt;p&gt;昨天一晚上才下载升级好 EI Capitan，然而出现了点小问题。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;首先是左划的页面没有了，上面有好多好多stickies T.T 
​	
	之前一直没注意，其实左划就是一个Dashboard而已，Launchpad里面打开就好了
	以及安利那个插件：Toggle Alfred，还是感觉比SpotLight好用&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;然后是pod install没用了，提示command not found&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;觉得ruby升级造成了，重新gem install cocoapods，结果给我报一堆错。各种莫名其妙的权限问题。
用sudo su，结果报Connection reset by peer - SSL_connect，差点以为是阿里的那个ruby源有问题。
结果，用这个解决了：sudo gem install -n /usr/local/bin cocoapods
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;拖动微信窗口的时候有问题，各种跳闪。&lt;/li&gt;
  &lt;li&gt;我写了这么多主要是因为不想再看mongodb的geo了。:)&lt;/li&gt;
  &lt;li&gt;然而还是得看。&lt;/li&gt;
  &lt;li&gt;对了，新系统和iOS9一样，字体丑的不要不要的，好重好粗。&lt;/li&gt;
&lt;/ol&gt;</content><summary type="html">昨天一晚上才下载升级好 EI Capitan，然而出现了点小问题。</summary></entry><entry><title type="html">第一篇</title><link href="http://localhost:4000/linux/centos/2015/10/02/First-of-All.html" rel="alternate" type="text/html" title="第一篇" /><published>2015-10-02T08:30:00+08:00</published><updated>2015-10-02T08:30:00+08:00</updated><id>http://localhost:4000/linux/centos/2015/10/02/First%20of%20All</id><content type="html" xml:base="http://localhost:4000/linux/centos/2015/10/02/First-of-All.html">&lt;p&gt;总算是下定决心租了域名和服务器，本意是做Golang的一个练手项目，自己写一个blog。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;然而，恩，最终用了hexo，Golang慢慢来吧。:&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;租了Vultr的服务器，用CentOS6，感谢陈总、彭博的鼎力支持和吐槽以及好心提供的VPN。&lt;/p&gt;

&lt;p&gt;被小坑了一把，Vultr提供的Linux系统自动开启了防火墙，栽了一天半才突然想起来。&lt;/p&gt;

&lt;p&gt;具体症状：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;VPS部署以后，在VPS上直接通过curl指令，访问localhost:port是可以访问的。&lt;/li&gt;
  &lt;li&gt;远程ping服务器的IP地址可以ping通。&lt;/li&gt;
  &lt;li&gt;远程直接访问VPS的外网IP显示的是ERR_EMPTY_RESPONSE。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;解决方案：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;在iptables里面放行需要的端口，这里放行的是80端口。&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo iptables -I INPUT -p tcp -m tcp --dport 80 -j ACCEPT
sudo service iptables save
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;接下来的事&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Feeling服务端继续完善。（纸飞机那个算法好像好复杂的样子）&lt;/li&gt;
  &lt;li&gt;Go还任重道远，慢慢在看GoBlog的代码&lt;/li&gt;
  &lt;li&gt;许总推荐的UNIX 网络编程好贵买不起&lt;/li&gt;
  &lt;li&gt;到底什么时候能见到猪猪呢 T.T&lt;/li&gt;
&lt;/ul&gt;</content><summary type="html">总算是下定决心租了域名和服务器，本意是做Golang的一个练手项目，自己写一个blog。</summary></entry></feed>
